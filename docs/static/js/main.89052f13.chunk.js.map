{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,QCNnBG,EAAc,SAAC,GAAwB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEtC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCaFK,EAnBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACC,mCAEPN,EAHM,iDAG2CO,UAAUF,GAHrD,6BACC,oCADD,SAIOG,MAAOR,GAJd,cAINS,EAJM,gBAKWA,EAAKC,OALhB,uBAKJC,EALI,EAKJA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAX9B,kBAeLY,GAfK,4CAAH,sDCIAK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPjB,EAASC,GACJiB,MAAM,SAAAC,GACHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAAEb,IAEEc,EDN2BK,CAAcnB,GAAnCU,EATwB,EAS7BJ,KAAcO,EATe,EASfA,QAEtB,OACI,qCACI,oBAAIjB,UAAU,oCAAd,SAAoDI,IAElDa,GAAW,mBAAGjB,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQc,EAAOF,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAEaA,GADCA,EAAIhB,aEtBzB2B,EAAe,WAAO,IAAD,EAEIzC,mBAAS,CAAC,mBAFd,mBAEzB0C,EAFyB,KAEb3C,EAFa,KAUhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI2C,EAAWb,KAAK,SAAAR,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MCnBpBsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.89052f13.chunk.js","sourcesContent":["\nimport { useState } from 'react'\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); // desactivar el comportamiento por defecto del formulario  \n        if(  inputValue.trim().length > 2) {\n            // set categories tiene el estado anterior, por lo que modificamos su contenido\n            setCategories(cats => [ inputValue, ...cats ] );  \n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange } \n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\nexport const GifGridItem = ( { id, title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","\nconst getGifs = async( category ) => {\n    const APIKey='uGLs8S1iwsmohctCaZ2ewQ1r8F7PkYLQ';\n        \n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${ APIKey }`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return { \n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n\n}\n\nexport default getGifs;","// import { useState, useEffect } from \"react\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([]);\n    // acciones que se realizarán cuando se lance el componente por primera vez\n    // useEffect( () => {\n    //     getGifs( category )\n    //         .then( setImages );\n    // }, [ category ]); //se añade la dependencia por si category cambia\n\n    const { data:images , loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid\">\n\n                { \n                    images.map( img =>  (        \n                    <GifGridItem \n                            key={ img.id }\n                            { ...img } \n                        />         \n                    ))\n                }\n\n            </div> \n            \n        </>\n    )\n}\n","import { useEffect, useState } from 'react';\nimport getGifs from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });    \n            })\n    }, [ category ]); //se añade la dependencia por si category cambia\n\n    return state; //{ data:[], loading: true}\n}\n","\r\nimport { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['rick and morty']);\r\n  \r\n  // const handleAdd = () => { \r\n  //   setCategories([ ...categories,'Monguer Guaper'  ]); \r\n  //   // usando el callback\r\n  //   // setCategories( categ => [ ...categ, 'Monguer Guaper'] );\r\n  //}\r\n  \r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <hr />\r\n \r\n      <ol>\r\n        {  \r\n          categories.map( category => \r\n            <GifGrid \r\n              key={ category }\r\n              category={ category } \r\n            />\r\n          )\r\n        }\r\n      </ol>\r\n    \r\n    </>\r\n  ) \r\n\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}